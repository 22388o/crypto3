language: cpp
python: "2.7"
sudo: true

matrix:
    include:
        -   os: osx
            env: TARGET_NAME_TESTS=block COMPILER_VERSION=current
            compiler: clang

        -   os: osx
            env: TARGET_NAME_TESTS=block COMPILER_VERSION=current
            compiler: gcc

        -   os: osx
            env: TARGET_NAME_TESTS=hash COMPILER_VERSION=current
            compiler: clang

        -   os: osx
            env: TARGET_NAME_TESTS=hash COMPILER_VERSION=current
            compiler: gcc

        -   os: osx
            env: TARGET_NAME_TESTS=codec COMPILER_VERSION=current
            compiler: clang

        -   os: osx
            env: TARGET_NAME_TESTS=codec COMPILER_VERSION=current
            compiler: gcc

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=block COMPILER_VERSION=5.0
            compiler: clang

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=block COMPILER_VERSION=6.0
            compiler: clang

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=block COMPILER_VERSION=7
            compiler: clang

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=block COMPILER_VERSION=8
            compiler: clang

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=block COMPILER_VERSION=5
            compiler: gcc

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=block COMPILER_VERSION=6
            compiler: gcc

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=block COMPILER_VERSION=7
            compiler: gcc

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=block COMPILER_VERSION=8
            compiler: gcc

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=hash COMPILER_VERSION=5.0
            compiler: clang

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=hash COMPILER_VERSION=6.0
            compiler: clang

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=hash COMPILER_VERSION=7
            compiler: clang

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=hash COMPILER_VERSION=8
            compiler: clang

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=hash COMPILER_VERSION=5
            compiler: gcc

        -   os: linux
            dist: xenial
            env: TARGET_NAME_LIBRARY=hash TARGET_NAME_TESTS=hash COMPILER_VERSION=6
            compiler: gcc

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=hash COMPILER_VERSION=7
            compiler: gcc

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=hash COMPILER_VERSION=8
            compiler: gcc

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=codec COMPILER_VERSION=5.0
            compiler: clang

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=codec COMPILER_VERSION=6.0
            compiler: clang

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=codec COMPILER_VERSION=7
            compiler: clang

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=codec COMPILER_VERSION=8
            compiler: clang

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=codec COMPILER_VERSION=5
            compiler: gcc

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=codec COMPILER_VERSION=6
            compiler: gcc

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=codec COMPILER_VERSION=7
            compiler: gcc

        -   os: linux
            dist: xenial
            env: TARGET_NAME_TESTS=codec COMPILER_VERSION=8
            compiler: gcc

before_install:
    - if [[ $TRAVIS_OS_NAME == linux && $TRAVIS_COMPILER == clang ]]; then
        wget -O - http://apt.llvm.org/llvm-snapshot.gpg.key|sudo apt-key add -;
        sudo apt-add-repository "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-${COMPILER_VERSION} main";
        sudo apt-get update && sudo apt-get install clang-${COMPILER_VERSION};
        export CC=/usr/bin/clang-${COMPILER_VERSION};
        export CXX=/usr/bin/clang++-${COMPILER_VERSION};
        fi
    - if [[ $TRAVIS_OS_NAME == linux && $TRAVIS_COMPILER == gcc ]]; then
        sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test;
        sudo apt-get update;
        sudo apt-get install gcc-${COMPILER_VERSION} g++-${COMPILER_VERSION};
        export CC=/usr/bin/gcc-${COMPILER_VERSION};
        export CXX=/usr/bin/g++-${COMPILER_VERSION};
        fi
    - if [[ $TRAVIS_OS_NAME == linux ]]; then
        sudo apt-get update;
        sudo apt-get install bzip2 zlib1g-dev;
        sudo apt-get install gcc-6-base;
        fi
    - if [[ $TRAVIS_OS_NAME == osx ]]; then
        brew update;
        brew upgrade cmake;
        fi

install:
    - cd ..
    - git clone --depth 1 https://github.com/boostorg/boost.git boost-root;
    - cd boost-root
    - git submodule update --init tools/build
    - git submodule update --init libs/config
    - git submodule update --init tools/boost_install
    - git submodule update --init libs/headers
    - git submodule update --init tools/boostdep
    - git submodule update --init libs/multiprecision
    - git submodule update --init libs/container
    - git submodule update --init libs/accumulators
    - python tools/boostdep/depinst/depinst.py multiprecision
    - python tools/boostdep/depinst/depinst.py container
    - python tools/boostdep/depinst/depinst.py accumulators
    - ./bootstrap.sh

script:
    - sudo ./b2 -j$proc install || true;
    - cd $TRAVIS_BUILD_DIR && mkdir cmake-build && cd cmake-build;
    - if [[ $TRAVIS_OS_NAME == linux ]]; then
        proc=$(($(nproc) + 1));
        elif [[ $TRAVIS_OS_NAME == osx ]]; then
        proc=$(($(sysctl -n hw.ncpu) + 1));
        fi;
    - sudo ./b2 -j$proc install || true;
    - cd $TRAVIS_BUILD_DIR && mkdir cmake-build && cd cmake-build;
    - echo $CXXSTD
    - cmake -DBUILD_SHARED_LIBS=TRUE -DBUILD_TESTS=TRUE -DCMAKE_CXX_STANDARD=$(echo $CXXSTD | sed 's/[^0-9z]*//g') ..;
    - make -j$proc tests-$TARGET_NAME_TESTS;
    - ctest .
